
//to config username and email
git config --global user.name "Ahmad"
git config --global user.email "Ahmadnasser@gmail.com"

git add . to add all new files 
git status to see untracked files and commits

git add file name " to add a specific file"
git commit -m "msg describing the changes ex: add hello.js file "
-m: argument stands for msg


git log //to chech the history of commit 

by running git log i get something like this
a commit hash id 
author of the commit 
and date 

commit 02380f5da4b2135107406eb718fe1e131a2cb023 (HEAD -> master)
Author: Ahmad <Ahmadnasser3971@gmail.com>
Date:   Tue Mar 18 02:36:17 2025 +0200

    added hello.css and hello.html

commit b9817681c1bce550d9976ca781a4d5b9f02f1e0c
Author: Ahmad <Ahmadnasser3971@gmail.com>
Date:   Tue Mar 18 02:32:52 2025 +0200

    added notes.txt this time

commit 8b0496779503f7bf15e83d53751def95d0ae54db
Author: Ahmad <Ahmadnasser3971@gmail.com>
Date:   Tue Mar 18 02:29:15 2025 +0200

to go back to an older version of a commit 
i copy the hash id of the commit and use the command

git checkout b9817681c1bce550d9976ca781a4d5b9f02f1e0c
here example it will take me to when i added the notes.txt file to the tracked files
before adding hello.html and hello.css
note files will kinda disapper cuz tracked files in a tree so by checking out i change the pointer of the head
by this im in a state called detached state where the pointer of the head doesnt point to the latest commit 
i can switch to a different branch here 

--now to go back to the main branch simply with

git checkout main/master  
to change name of master branch from master to main:
git branch -m master main

if i want to check out back and discard any commits i added in the detached head state
git checkout -f main

Github::common remote repo 
linking our local repo to the online repo
copy link of the repo from github then
we use :
-git remote add origin https://github.com/Ahmad-Nasser-2/Git.git
//Now to push our local commits to our github repo :
we use:
- git push -u origin main

//now to create a new branch 
we use:
git branch branch-name 
note: that if we created a branch when we are on the main
it will inherete all the code of the main 
and later on for example if we want we can merge the branch into the main
think of it as working on a feature or fixing a bug after creating the branch for that feature 
finish working on it we can merge the branch to the main

now if we were on a branch and created a branch the new branch will inherit from the old branch not  the main 

we can specify the branch and the source 
we use:
git branch branch-name source-name

then we can use checkout to go to the new branch 
or we can create and go in one line 
we use:
git checkout -b newbranch

now To link the local and the online repo 
we first use :
 git push --set-upstream origin new-branch
then 
git push -u origin new-branch

now we can update online repo using git push 
and update local repo using git pull 

 after finishing implementing the feature we can 
 make a pull request on github then our team lead will check the changes compare then 
 merge it and it will be  added to the main branch
 we can add for the merge a header whos made the pull request with a msgg with the changes
alright after updating our online repo and merged the branch with the main branch 
we use git checkout main to go to main branch 
then we use git pull to update our local repo


--Merge conflicts : Means couldnt merge something cuz it conflict with the main 
example lets  make 2 branches 

hey this div1 
testing merge conflit
now trying writing with div 2

now git revert 
    git  reset 
    git  stash
    
    - reveret is kinda like rest but with commits? its like do an undo 
    -rest is an undo 
    -stash is saving a certain code somewhere that can be used lately example working on a feature then u were asked to do 
    another urgent feature u then have to stop with ur  own feature so it be saved somewhere u keep track of the code u wrote
 
     
////
     so here trying the stash
     //now this is a code i had to write before implementing the feature i saved in the stash 
     
     so here trying the stash
